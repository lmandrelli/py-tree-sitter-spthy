name: Build Cross-Platform Wheels

on:
  push:
    tags: ['v*']
  pull_request:
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    # Install Tree-sitter CLI via Cargo (most reliable across platforms)
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install Tree-sitter CLI
      run: cargo install tree-sitter-cli

    - name: Generate parser
      run: |
        cd grammars/tree-sitter-spthy
        tree-sitter generate

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.2
      env:
        CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
        CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux*"
        CIBW_BEFORE_BUILD: pip install setuptools wheel
        # Ensure generated files are included
        CIBW_BEFORE_BUILD_LINUX: yum install -y gcc gcc-c++ && pip install setuptools wheel
        CIBW_BEFORE_BUILD_MACOS: pip install setuptools wheel
        CIBW_BEFORE_BUILD_WINDOWS: pip install setuptools wheel

    - uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}
        path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: wheels-*
        path: dist
        merge-multiple: true

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}